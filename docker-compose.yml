services:
  nginx: 
    image: nginx
    container_name: nginx
    networks:
      - node-net
    ports:
      - "8080:80"
    tty: true
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node

  node:
    build: 
      context: ./node
    container_name: node
    command: node index.js
    develop:
      watch:
        - action: sync
          path: ./app
          target: ./
          ignore:
            - node_modules
        - action: rebuild
          path: package.json

    environment:
      - SERVER_PORT=3000
    networks:
      - node-net
    depends_on:
      - db
  
  db:
    image: postgres
    container_name: db
    restart: always
    networks:
      - node-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: node
    tty: true
    volumes:
      - ./dataset:/docker-entrypoint-initdb.d
    develop:
      watch:
        - action: sync
          path: ./node
          target: /
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json 

  pgadmin:
    image: dpage/pgadmin4
    networks:
      - node-net
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "5050:80"
    depends_on:
      - db
      
networks:
  node-net:
    driver: bridge